// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var e="function"==typeof Object.defineProperty?Object.defineProperty:null;var t=Object.defineProperty,r=Object.prototype,o=r.toString,n=r.__defineGetter__,a=r.__defineSetter__,l=r.__lookupGetter__,_=r.__lookupSetter__;var i=function(){try{return e({},"x",{}),!0}catch(e){return!1}}()?t:function(e,t,i){var u,c,p,f;if("object"!=typeof e||null===e||"[object Array]"===o.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof i||null===i||"[object Array]"===o.call(i))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+i+"`.");if((c="value"in i)&&(l.call(e,t)||_.call(e,t)?(u=e.__proto__,e.__proto__=r,delete e[t],e[t]=i.value,e.__proto__=u):e[t]=i.value),p="get"in i,f="set"in i,c&&(p||f))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return p&&n&&n.call(e,t,i.get),f&&a&&a.call(e,t,i.set),e};function u(e,t,r){i(e,t,{configurable:!1,enumerable:!0,writable:!1,value:r})}var c=4294967295,p=9007199254740991,f={};u(f,"MAX_ARRAY_LENGTH",4294967295),u(f,"MAX_TYPED_ARRAY_LENGTH",9007199254740991);export{c as MAX_ARRAY_LENGTH,p as MAX_TYPED_ARRAY_LENGTH,f as default};
//# sourceMappingURL=mod.js.map
